简单工厂类：
    简单工厂创建类的方式一般是静态方法。
        实现方式：
            工厂角色：这是一个直接被外部调用的类，里面提供一个静态方法（静态方法是在类编译的时候就会有），供外部调用
            抽象产品角色：就是一个产品角色的抽象类，把一些公用的部分提取出来，所有具体的产品类都是继承于他。因此在具体工厂类中只需要定义一个他就可以了
            具体产品：就是一个个实例了。
            实例展现：我的水果工厂。
        优缺点：
            优点：创建和使用分离开来，引入配置文件符合开闭原则。代码无入侵原则
            缺点：如果新引进的产品不多，逻辑非常困难，系统扩展不是很好。
工厂方法：
    是对简单工厂方法延伸，弥补了简单工厂模式的不足，开闭原则。原理就是，在工厂模式上面新增一个抽象工厂类。
        实现方式：
            抽象产品角色：同简单工厂类。
            具体产品：同简单工厂类。
            抽象工厂：所有创建对象的工厂继承他，创造不同的工厂
            具体工厂：抽象工厂的子类，具体工厂的实现
            实例展现：我的奶茶工厂
        优缺点：
            优点：只需要增加一个具体产品什么的就可以了。
            缺点：增加系统抽象性和可理解难度，同样一个工厂类很多
抽象工厂模式：

        概念理解：
            产品等级结构：就是产品的继承结构，例如电视机，有海尔的，sony的等等
            产品族：一个工厂生产的不同产品，换句话来说就是同一个工厂生产的位于不同产品等级结构的产品，例如海尔生产电视机，空调等等




